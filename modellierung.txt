Types:
    Nativ: null, string, number, JSON
    fqid: Strukturierter string
    HTML: string mit HTML Inhalt
    <T>[]: Array von Typ T
    <modellname>: number (ID) zu dem Modell
    float: string mit iso-gemäßer Formatierung eines floats
    decimal(X): Decimal values represented as a string with X decimal places
    datetime: Datetime as a unix timestamp
    // Why a number? This enables queries in the DB. And we do not
    // need more precision than 1 second.

Note to structured fields: Fields with `some_field_<some_variable>` do have
values for `<some_variable>` that fits into the format of a field. E.g.
`amendment_paragraph_3`. Note that it might be possible that no kind of
this field exists in a model.

projector: {
    id: number;
    scale: number;
    scroll: number;
    name: string;
    width: number;
    aspect_ratio_numerator: number;
    aspect_ratio_denominator: number;
    color: string;
    background_color: string;
    header_background_color: string;
    header_font_color: string;
    header_h1_color: string;
    chyron_background_color: string;
    chyron_font_color: string;
    show_header_footer: boolean;
    show_title: boolean;
    show_logo: boolean

    element: projection;
    element_fqid: fqid;
    elements_preview: projection[];
    elements_history: projection[];
    reference_projector_id: projector;
    projectiondefault_ids: projectiondefault[];
    meeting_id: meeting;
};
projection: {
    id: number;
    projector_id: projector;
    projector_history_ids: projector;
    projector_preview_id: projector;
    element: fqid;
    options: JSON;
};
projectiondefault: {
    id: number;
    name: string;
    display_name: string;

    projector_id: projector;
    meeting_id: meeting;
};
tag: {
    id: number;
    name: string;

    tagged_ids: fqid[];
    meeting_id: meeting;
};
projector_message: {
    id: number;
    message: HTML;

    projection_id: projection[];
    meeting_id: meeting;
}
projector_countdown: {
    id: number;
    title: string;
    description: string;
    default_time: number;
    countdown_time: number; // float?
    running: boolean;

    projection_id: projection[];
    meeting_id: meeting;
}
agenda_item: {
    id: number;
    item_number: string;
    comment: string,
    closed: boolean,
    type: number,
    is_internal: boolean;
    is_hidden: boolean;
    duration: number; // in seconds
    weight: number;
    level: number; //für client nicht unbedingt nötig.

    content_object_id: fqid;
    parent_id: agenda_item;
    children_ids: agenda_item[];
    projection_id: projection[];
    meeting_id: meeting;
}
list_of_speakers: {
    closed: boolean;

    content_object_id: fqid;
    speaker_ids: speaker[];
    projection_id: projection[];
    meeting_id: meeting;
}
speaker: {
    id: number;
    begin_time: datetime;
    end_time: datetime;
    weight: number;
    marked: boolean;

    list_of_speakers_id: list_of_speakers;
    user_id: user;
}
topic: {
    id: number;
    title: string;
    text: HTML;

    attachments_id: mediafile[];
    agenda_item_id: agenda_item;
    meeting_id: meeting;
}
user: {
    id: number;
    username: string;
    last_email_send: string;
//is_active: boolean,
    default_password: string;
//is_present: false,
    is_committee: boolean;
    about_me: HTML;
    gender: string,
//auth_type: string;
// auth-spezifische felder?
    title: string;
    first_name: string;
    last_name: string;
    comment: HTML;
    number: string;
    email: string;
    structure_level: string;

    // All foreign keys are meeting-specific:
    // - Keys are smaller (Space is in O(n^2) for n keys 
    //   in the relation), so this saves storagespace
    // - This makes quering things like this possible:
    //   "Give me all groups for User X in Meeting Y" without
    //   the need to get all groups and filter them for the meeting
    group_<meeting_id>_ids: group[];
    personal_note_<meeting_id>_ids: personal_note[];
    projection_<meeting_id>_ids: projection[];
    supported_motion_<meeting_id>_ids: motion[];
    submitted_motion_<meeting_id>_ids: motion_submitter[];
    assignment_related_user_<meeting_id>_ids: assignment_related_user[];
    motion_vote_<meeting_id>_ids: motion_vote[];
    assignment_vote_<meeting_id>_ids: assignment_vote[];
    motion_voted_poll_<meeting_id>_ids: motion_poll[];
    assignment_voted_poll_<meeting_id>_ids: assignment_poll[];
}
group: {
    id: 1,
    name: string;
    is_superadmingroup: boolean;
    is_defaultgroup: boolean;
    permissions: string[];

    user_ids: user[];
    mediafile_access_group_ids: mediafile[];
    read_comment_section_ids: motion_comment_section[];
    write_comment_section_ids: motion_comment_section[];
    motion_poll_ids: motion_poll[];
    meeting_id: meeting;
}
personal_note: {
    id: number;
    note: HTML;
    star: boolean;

    user_id: user;
    element: fqid;
    meeting_id: meeting;
}
mediafile: 
    id: number;
    title: string;
// media_url_prefix: string; Könnte durch config abgelöst werden
    is_directory: boolean;
    filesize: string;
    mimetype: string;
    create_timestamp: datetime;
    path: string;
    inherited_access_groups_id: boolean;

    access_group_ids: group[];
    parent_id: mediafile[];
    list_of_speakers_id: list_of_speakers;
    projection_ids: projection[];
    attachement_ids: fqid[];
    meeting_id: meeting;
}
motion: {
    id: number;
    identifier: string;
    title: string;
    text: HTML;
    amendment_paragraph_<paragraph_number>: HTML;
    modified_final_version: HTML;
    reason: HTML;
    category_weight: number;
    state_extension: null, //TODO
    state_restriction: [], //TODO
    workflow_id: motion-workflow;
    recommendation_extension: null, // TODO
    sort_parent_id: motion;
    sort_weight: number;
    created: string;
    last_modified: string;

    parent_id: motion;
    children_ids: motion[];
    origin_id: motion;
    derived_motion_ids: motion[];
    state_id: motion_state;
    recommendation_id: motion_state;
    category_id: category;
    motion_block_id: motion_block;
    submitter_ids: motion_submitter[];
    supporter_ids: user[];
    poll_ids: motion_poll[];
    change_recommendation_ids: motion_change_recommendation[];
    statute_paragraph_id: motion_statute_paragraph;
    comment_ids: motion_comment[];
    agenda_item_id: agenda_item;
    list_of_speakers_id: list_of_speakers;
    tag_ids: tag[];
    attachment_ids: mediafile[];
    meeting_id: meeting;
}
motion_poll: {
    id: number;
    pollmethod: string;
    state: number;
    type: string;
    title: string;
    onehundred_percent_base: string;
    majority_method: string;
    votesvalid: decimal(6);
    votesinvalid: decimal(6);
    votescast: decimal(6);

    option_ids: motion_option[];
    motion_id: motion;
    voted_ids: user[];
    group_ids: group[];
    meeting_id: meeting;
}
motion_option: {
    id: number;
    yes: decimal(6);
    no: decimal(6);
    abstain: decimal(6);

    vote_ids: motion_vote[];
}
motion_vote: {
    id: number;
    weight: decimal(6);
    value: string;

    option_id: motion_option;
    user_id: user;
}
motion_submitter: {
    id: number;
    weight: number;

    user_id: user;
    motion_id: motion;
}
motion_comment: {
    id: number;
    comment: HTML;

    motion_id: motion;
    section_id: motion_comment_section;
}
motion_comment_section: {
    id: number;
    name: string;
    weight: number;

    read_group_ids: group[];
    write_group_ids: group[];
    meeting_id: meeting;
}
motion_category: {
    id: number;
    name: string;
    prefix: string;
    weight: number;
    level: number;

    parent_id: motion_category;
    children_ids: motion_category[];
    motion_ids: motion[];
    meeting_id: meeting;
}
motion_block: {
    id: number;
    title: string;
    internal: boolean;

    motion_ids: motion[];
    agenda_item_id: agenda_item;
    list_of_speakers_id: list_of_speakers;
    meeting_id: meeting;
}
motion_change_recommendation: {
    id: number;
    rejected: boolean;
    internal: boolean;
    type: number;
    other_description: string;
    line_from: number;
    line_to: number;
    text: HTML;
    creation_time: datetime;

    motion_id: motion;
}
motion_state {
    id: number;
    name: string;
    recommendation_label: string;
    css_class: string;
    restrictions: string[],
    allow_support: boolean;
    allow_create_poll: boolean;
    allow_submitter_edit: boolean;
    set_identifier: boolean;
    show_state_extension_field: boolean;
    merge_amendment_into_final: number;
    show_recommendation_extension_field: boolean;

    next_state_ids: motion_state[];
    previous_state_ids: motion_state[];
    motion_ids: motion[];
    motion_recommendation_ids: motion[];
    workflow_id: motion_workflow;
    first_state_of_workflow_id: motion_workflow;

    // TODO: relations to motion
}
motion_workflow: {
    id: number;
    name: string;
    state_ids: motion_state[];
    first_state_id: motion_state;

    // TODO relations to motion

    meeting_id: meeting;
}
motion_statute_paragraph {
    id: number;
    title: string;
    text: HTML;
    weight: number;

    motion_ids: motion[];
    meeting_id: meeting;
}
assignment: {
    id: number;
    title: string;
    description: HTML;
    open_posts: number;
    phase: number;
    poll_description_default: string;

    assignment_related_user_ids: assignment_related_user[];
    poll_ids: assignment_poll[];
    agenda_item_id: agenda_item;
    list_of_speakers_id: list_of_speakers;
    tag_ids: tag[];
    attachment_ids: mediafile[];
    meeting_id: meeting;
}
assignment_related_user: {
    id: number;
    elected: boolean;
    weight: number;

    assignment_id: assignment;
    user_id: user;
}
assignment_poll: {
    id: number;
    allow_multiple_votes_per_candidate: boolean;
    global_abstain: boolean;
    global_no: boolean;
    amount_global_abstain: decimal(6);
    amount_global_no: decimal(6);
    pollmethod: string;
    state: number;
    title: string;
    description: string;
    type: string;
    onehundred_percent_base: string;
    majority_method: string;
    votes_amount: number;
    votescast: decimal(6);
    votesinvalid: decimal(6);
    votesvalid: decimal(6);

    assignment_id: assignment;
    voted_ids: user[];
    group_ids: group[];
    option_ids: assignment_option[];
    meeting_id: meeting;
}
assignment_option: {
    id: number;
    yes: decimal(6);
    no: decimal(6);
    abstain: decimal(6);
    weight: number;

    poll_id: assignment_poll;
    user_id: user;
}
assignment_vote: {
    id: number;
    value: string;
    weight: decimal(6);

    option_id: assignment_option;
    user_id: user;
}

// New models
meeting: {
    id: number;
    identifier: string; // For unique urls.
    is_template: boolean; // Unique within a committee
    enable_anonymous: boolean;

    // Old "general_*" configs
    name: string;
    description: string;
    location: string;
    start_time: datetime;
    end_time: datetime;
    welcome_title: string;
    welcome_text: HTML;

    // Export section still needed?
    // Or should this be moved into committee-scope or organisation-scope?
    export_csv_encoding: string;
    export_csv_separator: string;
    export_pdf_pagenumber_alignment: string;
    export pdf_fontsize: number;
    export_pdf_pagesize: string;

    // TODO: logos
    // TODO: fonts

    // TODO: custom translations

    // Is this right here in a meeting?
    users_sort_by: string;
    users_enable_presence_view: boolean;

    // Motions
    motions_default_workflow: workflow; // TODO: relation
    motions_default_statute_amendments_workflow: workflow; // TODO: relation
    motions_preamble: string;
    motions_default_line_numbering: string;
    motions_line_length: number;
    motions_reason_required: boolean;
    motions_enable_text_on_projector: boolean;
    motions_enable_reason_on_projector: boolean;
    motions_enable_sidebox_on_projector: boolean;
    motions_enable_resommendation_on_projector: boolean;
    motions_show_referring_motions: boolean;
    motions_show_sequential_number: boolean;
    motions_recommendations_by: string;
    motions_statute_recommendations_by: string;
    motions_recommendation_text_mode: string;
    motions_default_sorting: string;
    motions_identifier_type: string;
    motions_identifier_min_digits: number;
    motions_identifier_with_blank: boolean;
    motions_statutes_enabled: boolean;
    motions_amendments_enabled: boolean;
    motions_amendments_in_main_list: boolean;
    motions_amendments_prefix: string;
    motions_amendments_text_mode: string;
    motions_amendments_multiple_paragraphs: boolean;
    motions_supporters_min_amount: number;
    motions_supporters_enable_autoremove: boolean;
    motions_export_title: string;
    motions_export_preamble: string;
    motions_export_submitter_recommendation: boolean;
    motions_export follow_recommendation: boolean;

    // Assignments
    assignments_poll_add_candidates_to_list_of_spekaers: boolean;
    assignemnts_export_pdf_title: string;
    assignments_export_pdf_preamble: string;

    // TODO: reverse-relations
    projector_ids: projector[];
    projectiondefault_ids: projectiondefault[];
    projector_countdown_ids: projector_countdown[];
    projector_message_ids: projector_message[];
    tag_ids: tag[];
    agenda_item_ids: agenda_item[];
    list_of_speakers_ids: list_of_speakers[];
    topic_ids: topic[];
    group_ids: group[];
    personal_note_ids: personal_note[];
    mediafile_ids: mediafile[];
    motion_ids: motion[];
    motion_poll_ids: motion_poll[];
    motion_comment_section_ids: motion_comment_section[];
    motion_category_ids: motion_category[];
    motion_block_ids: motion_block[];
    motion_workflow_ids: motion_workflow[];
    motion_statute_paragraph_ids: motion_statute_paragraph[];
    assignment_ids: assignment[];
    assignment_poll_ids: assignment_poll[];

    // No relations to a meeting:
    // projection
    // speaker
    // user
    // motion_option
    // motion_vote
    // motion_comment
    // motion_submitter
    // motion_change_recommendation
    // motion_state
    // assignment_related_user
    // assignment_option
    // assignment_vote

    // Why: These are mostly M2M models or ones, that will never have a list view.
    // There would be no need to link them to the meeting, if they an be
    // reached through a parent model. E.g. a motion_option can be reached through
    // a motion_poll. There will never be the need to make something like "show all
    // motion_options at once".
    // TODO: Is this right for all above stated models?
    // TODO: We might link user to a meeting. A member is defined by checking,
    // if a user is assigned to at least one group. This "query" must be checked,
    // if it can be performed.
}
committee: {
    id: number;
    name: string;
    description: string; //Or HTML? Or not needed (-> UI decision)

    meeting_ids: meeting[];
    member_ids: user[];
    manager_ids: user[];
    forward_to_committee_ids: committee[];
    received_forwardings_from_committee_ids: committee[];
    organisation_id: organisation;
}
organisation: {
    id: number;
    name: string;
    description: HTML; // Needed??

    // Configs:
    legal_notice: string;
    privacy_policy: string;
    login_text: string;
    theme: string;

    // TODO: Logos
    // TODO: Fonts

    // TODO: OS3 user configs

    committee_ids: committee[];
}


